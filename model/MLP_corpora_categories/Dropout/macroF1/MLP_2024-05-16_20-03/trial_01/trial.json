{"trial_id": "01", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "num_layers", "default": null, "conditions": [], "min_value": 1, "max_value": 4, "step": 1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "units_0", "default": null, "conditions": [], "min_value": 200, "max_value": 600, "step": 50, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "activation", "default": "relu", "conditions": [], "values": ["relu"], "ordered": false}}, {"class_name": "Float", "config": {"name": "L1_0", "default": 1e-12, "conditions": [], "min_value": 1e-12, "max_value": 1e-06, "step": null, "sampling": "log"}}, {"class_name": "Float", "config": {"name": "drop_0", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.1, "step": null, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "lr", "default": 1e-07, "conditions": [], "min_value": 1e-07, "max_value": 0.0001, "step": null, "sampling": "log"}}, {"class_name": "Int", "config": {"name": "units_1", "default": null, "conditions": [], "min_value": 200, "max_value": 600, "step": 50, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "L1_1", "default": 1e-12, "conditions": [], "min_value": 1e-12, "max_value": 1e-06, "step": null, "sampling": "log"}}, {"class_name": "Float", "config": {"name": "drop_1", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.1, "step": null, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "units_2", "default": null, "conditions": [], "min_value": 200, "max_value": 600, "step": 50, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "L1_2", "default": 1e-12, "conditions": [], "min_value": 1e-12, "max_value": 1e-06, "step": null, "sampling": "log"}}, {"class_name": "Float", "config": {"name": "drop_2", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.1, "step": null, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "units_3", "default": null, "conditions": [], "min_value": 200, "max_value": 600, "step": 50, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "L1_3", "default": 1e-12, "conditions": [], "min_value": 1e-12, "max_value": 1e-06, "step": null, "sampling": "log"}}, {"class_name": "Float", "config": {"name": "drop_3", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.1, "step": null, "sampling": "linear"}}], "values": {"num_layers": 3, "units_0": 400, "activation": "relu", "L1_0": 2.9142761567466193e-12, "drop_0": 0.05703284231368732, "lr": 3.8619455722392995e-06, "units_1": 400, "L1_1": 9.380006151604764e-11, "drop_1": 0.06820045605879779, "units_2": 450, "L1_2": 1.8159649721004804e-11, "drop_2": 0.04586067093870614, "units_3": 350, "L1_3": 6.86373947477076e-09, "drop_3": 0.0038551839337380048}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"/ext3/miniconda3/envs/MusicSpeech-STMhpc_GPU/lib/python3.11/site-packages/keras_tuner/src/engine/base_tuner.py\", line 274, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"/ext3/miniconda3/envs/MusicSpeech-STMhpc_GPU/lib/python3.11/site-packages/keras_tuner/src/engine/base_tuner.py\", line 239, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ext3/miniconda3/envs/MusicSpeech-STMhpc_GPU/lib/python3.11/site-packages/keras_tuner/src/engine/tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/ext3/miniconda3/envs/MusicSpeech-STMhpc_GPU/lib/python3.11/site-packages/keras_tuner/src/engine/tuner.py\", line 233, in _build_and_fit_model\n    results = self.hypermodel.fit(hp, model, *args, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/vast/ac8888/MusicSpeech-STM/STM08gpu_MLP_STM_corpus.py\", line 284, in fit\n    return model.fit(\n           ^^^^^^^^^^\n  File \"/ext3/miniconda3/envs/MusicSpeech-STMhpc_GPU/lib/python3.11/site-packages/keras/src/utils/traceback_utils.py\", line 122, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"/ext3/miniconda3/envs/MusicSpeech-STMhpc_GPU/lib/python3.11/site-packages/keras/src/callbacks/early_stopping.py\", line 201, in get_monitor_value\n    monitor_value = logs.get(self.monitor)\n                    ^^^^^^^^^^^^^^^^^^^^^^\nTypeError: unhashable type: 'Objective'\n"}